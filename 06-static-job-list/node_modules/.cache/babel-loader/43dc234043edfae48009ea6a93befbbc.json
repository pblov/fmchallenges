{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\05-static-job-list\\\\src\\\\JobListingApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { JobCard } from './components/JobCard';\nimport dataJob from './data/data.json';\nimport { Container, Grid } from '@material-ui/core';\nimport { Header } from './components/Header';\nimport { Filter } from './components/Filter';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(them => {\n  return {\n    filterContainer: {\n      padding: '0px 30px',\n      margin: '100px auto'\n    },\n    jobContainer: {\n      border: '1px solid red',\n      margin: '100px auto',\n      padding: '0px 30px'\n    },\n    gridFilter: {\n      padding: '15px',\n      backgroundColor: 'hsl(0, 0%, 98%);',\n      boxShadow: '0px 6px 19px -8px hsl(180, 29%, 50%)',\n      borderRadius: '5px',\n      display: 'flex',\n      alignItems: 'center',\n      border: '1px solid red'\n    },\n    tagClass: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: '8px',\n      border: '1px solid red'\n    },\n    clearFilter: {\n      border: '1px solid blue'\n    }\n  };\n});\nexport const JobListingApp = () => {\n  _s();\n\n  const {\n    filterContainer,\n    jobContainer,\n    gridFilter,\n    tagClass,\n    clearFilter\n  } = useStyles();\n  const [jobList, setJobList] = useState([]);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    setJobList(dataJob);\n  }, []);\n\n  const handleFilter = ({\n    role,\n    level,\n    languages,\n    tools\n  }) => {\n    const buttons = [role, level, ...languages, ...tools];\n\n    if (filters.length === 0) {\n      return true;\n    }\n\n    return filters.every(tag => buttons.includes(tag));\n  };\n\n  const filteredJobs = jobList.filter(handleFilter);\n\n  const handleClick = buttons => {\n    if (!filters.includes(buttons)) {\n      setFilters([...filters, buttons]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: filterContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: gridFilter,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 9,\n          xs: 5,\n          className: tagClass,\n          children: filters.length > 0 && filters.map(filter => /*#__PURE__*/_jsxDEV(Filter, {\n            fil: filter\n          }, filter, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 3,\n          xs: 7,\n          className: clearFilter,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: jobContainer,\n      children: filteredJobs.map(jobs => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: jobs,\n        handleClick: handleClick\n      }, jobs.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(JobListingApp, \"Q+ANsAXGR9VCVqJ7xiSjvMs6p3A=\", false, function () {\n  return [useStyles];\n});\n\n_c = JobListingApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobListingApp\");","map":{"version":3,"sources":["E:/React/05-static-job-list/src/JobListingApp.js"],"names":["React","useEffect","useState","JobCard","dataJob","Container","Grid","Header","Filter","makeStyles","useStyles","them","filterContainer","padding","margin","jobContainer","border","gridFilter","backgroundColor","boxShadow","borderRadius","display","alignItems","tagClass","flexWrap","gap","clearFilter","JobListingApp","jobList","setJobList","filters","setFilters","handleFilter","role","level","languages","tools","buttons","length","every","tag","includes","filteredJobs","filter","handleClick","map","jobs","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { JobCard } from './components/JobCard';\r\nimport dataJob from './data/data.json';\r\nimport { Container,Grid } from '@material-ui/core';\r\nimport { Header } from './components/Header';\r\nimport { Filter } from './components/Filter';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles( them => {\r\n\r\n    return{\r\n\r\n        filterContainer:{\r\n            \r\n            padding:'0px 30px',\r\n            margin:'100px auto'\r\n            \r\n        },\r\n\r\n        jobContainer:{\r\n            border:'1px solid red',\r\n            margin:'100px auto',\r\n            padding:'0px 30px'\r\n        },\r\n\r\n        gridFilter:{\r\n            padding:'15px',\r\n            backgroundColor: 'hsl(0, 0%, 98%);',\r\n            boxShadow: '0px 6px 19px -8px hsl(180, 29%, 50%)',\r\n            borderRadius: '5px',\r\n            display:'flex',\r\n            alignItems:'center',\r\n            border:'1px solid red'\r\n        },\r\n        \r\n        tagClass:{\r\n            display:'flex',\r\n            flexWrap:'wrap',\r\n            gap:'8px',\r\n            border:'1px solid red'\r\n        },\r\n\r\n        clearFilter:{\r\n            border:'1px solid blue',\r\n        }\r\n    \r\n    }\r\n\r\n});\r\n\r\nexport const JobListingApp = () => {\r\n\r\n    const {filterContainer,jobContainer,gridFilter,tagClass,clearFilter} = useStyles();\r\n    const [jobList, setJobList] = useState([]);\r\n    const [filters, setFilters] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        \r\n        setJobList(dataJob);\r\n\r\n    }, []);   \r\n\r\n    const handleFilter = ({role,level,languages,tools}) => {\r\n\r\n        \r\n        const buttons = [role,level,...languages, ...tools];\r\n        \r\n        if(filters.length === 0){\r\n            return true;\r\n        }\r\n\r\n        return filters.every((tag) => buttons.includes(tag));\r\n    }\r\n  \r\n   const filteredJobs = jobList.filter(handleFilter);\r\n\r\n   const handleClick = (buttons) => {\r\n       if(!filters.includes(buttons)){\r\n        setFilters([...filters,buttons]);\r\n       }\r\n      \r\n   }\r\n \r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <Header/> \r\n\r\n            <Container className={filterContainer}>\r\n\r\n                <Grid container className={gridFilter} >\r\n                    <Grid item md={9} xs={5} className={tagClass}>\r\n                        {\r\n                            filters.length > 0 && filters.map(\r\n                                (filter) => <Filter key={filter} fil={filter}></Filter>  )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item md={3} xs={7}className={clearFilter}>\r\n                        <p>Clear</p>\r\n                    </Grid>\r\n                </Grid>\r\n                                        \r\n            </Container>\r\n\r\n\r\n            <Container className={jobContainer}>\r\n                \r\n                {\r\n                    filteredJobs.map(jobs => \r\n                        <JobCard  key={jobs.id}  job={jobs} handleClick={handleClick} />\r\n                    )\r\n                }\r\n\r\n\r\n            </Container>\r\n\r\n        </>\r\n       \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}